<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="cn.threeGroup.dao.ErrorTopicMapper">
  <resultMap id="BaseResultMap" type="cn.threeGroup.domain.ErrorTopic">
    <result column="id" jdbcType="BIGINT" property="id" />
    <result column="student_id" jdbcType="VARCHAR" property="studentId" />
    <result column="course_name" jdbcType="VARCHAR" property="courseName" />
    <result column="examination_name" jdbcType="VARCHAR" property="examinationName" />
    <result column="judge_teacher" jdbcType="VARCHAR" property="judgeTeacher" />
    <result column="topic_type" jdbcType="VARCHAR" property="topicType" />
    <result column="topic_id" jdbcType="BIGINT" property="topicId" />
    <result column="right_error" jdbcType="TINYINT" property="rightError" />
    <result column="right_answer" jdbcType="VARCHAR" property="rightAnswer" />
    <result column="personal_answer" jdbcType="VARCHAR" property="personalAnswer" />
    <result column="anlysis" jdbcType="VARCHAR" property="anlysis" />
    <result column="right_score" jdbcType="REAL" property="rightScore" />
    <result column="score" jdbcType="REAL" property="score" />
    <result column="sign" jdbcType="TINYINT" property="sign" />
  </resultMap>
  <resultMap id="MyBaseResultMap" type="cn.threeGroup.domain.ErrorTopic">
    <result column="examination_name" jdbcType="VARCHAR" property="examinationName" />
    <association  javaType="cn.threeGroup.domain.ExamInfo" property="gradeName" column="grade_name">
      <!--      <result column="grade_name" jdbcType="VARCHAR" property="gradeName" />-->
      <!--      <result column="class_name" jdbcType="VARCHAR" property="className" />-->
      <!--      <result column="start_time" jdbcType="TIMESTAMP" property="startTime" />-->
    </association>
    <association  javaType="cn.threeGroup.domain.ExamInfo" property="class_name" column="class_name"></association>
    <association  javaType="cn.threeGroup.domain.ExamInfo" property="startTime" column="startTime"></association>
  </resultMap>
  <resultMap id="ExamBaseResultMap" type="cn.threeGroup.model.ExamNameModel">
    <result column="examination_name" jdbcType="VARCHAR" property="examinationName" />
  </resultMap>
  <resultMap id="PExamBaseResultMap" type="cn.threeGroup.model.PExamNameModel">
    <result column="examination_name" jdbcType="VARCHAR" property="examinationName" />
    <result column="sign" jdbcType="TINYINT" property="sign" />
  </resultMap>
  <select id="selectByExamInfoErrorTopic" parameterType="cn.threeGroup.domain.ErrorTopicExample" resultMap="MyBaseResultMap">
    select t.examination_name,e.grade_name,e.class_name,e.start_time
    from error_topic t LEFT JOIN exam_info e
    on t.examination_name=e.exam_name
    where judge_teacher="${email}" and sign='0'
  </select>
  <select id="selectWaitExamNameByEmail" resultMap="PExamBaseResultMap">
    select DISTINCT (examination_name)
    from error_topic
    where judge_teacher="${email}" and sign='0'
  </select>
  <select id="selectPublishExamNameByEmail" resultMap="PExamBaseResultMap">
    select DISTINCT (s.examination_name)
    from error_topic s
    where s.judge_teacher="${email}"
    and not exists
    (
    SELECT examination_name
    from error_topic e
    where sign='0' and e.examination_name=s.examination_name
    )
  </select>
  <sql id="Example_Where_Clause">
    <where>
      <foreach collection="oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Update_By_Example_Where_Clause">
    <where>
      <foreach collection="example.oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Base_Column_List">
    id, student_id, course_name, examination_name, judge_teacher, topic_type, topic_id, 
    right_error, right_answer, personal_answer, anlysis, right_score, score, sign
  </sql>
  <select id="selectByExample" parameterType="cn.threeGroup.domain.ErrorTopicExample" resultMap="BaseResultMap">
    select
    <if test="distinct">
      distinct
    </if>
    <include refid="Base_Column_List" />
    from error_topic
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null">
      order by ${orderByClause}
    </if>
  </select>
  <delete id="deleteByExample" parameterType="cn.threeGroup.domain.ErrorTopicExample">
    delete from error_topic
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </delete>
  <insert id="insert" parameterType="cn.threeGroup.domain.ErrorTopic">
    insert into error_topic (id, student_id, course_name, 
      examination_name, judge_teacher, topic_type, 
      topic_id, right_error, right_answer, 
      personal_answer, anlysis, right_score, 
      score, sign)
    values (#{id,jdbcType=BIGINT}, #{studentId,jdbcType=VARCHAR}, #{courseName,jdbcType=VARCHAR}, 
      #{examinationName,jdbcType=VARCHAR}, #{judgeTeacher,jdbcType=VARCHAR}, #{topicType,jdbcType=VARCHAR}, 
      #{topicId,jdbcType=BIGINT}, #{rightError,jdbcType=TINYINT}, #{rightAnswer,jdbcType=VARCHAR}, 
      #{personalAnswer,jdbcType=VARCHAR}, #{anlysis,jdbcType=VARCHAR}, #{rightScore,jdbcType=REAL}, 
      #{score,jdbcType=REAL}, #{sign,jdbcType=TINYINT})
  </insert>
  <insert id="insertSelective" parameterType="cn.threeGroup.domain.ErrorTopic">
    insert into error_topic
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="id != null">
        id,
      </if>
      <if test="studentId != null">
        student_id,
      </if>
      <if test="courseName != null">
        course_name,
      </if>
      <if test="examinationName != null">
        examination_name,
      </if>
      <if test="judgeTeacher != null">
        judge_teacher,
      </if>
      <if test="topicType != null">
        topic_type,
      </if>
      <if test="topicId != null">
        topic_id,
      </if>
      <if test="rightError != null">
        right_error,
      </if>
      <if test="rightAnswer != null">
        right_answer,
      </if>
      <if test="personalAnswer != null">
        personal_answer,
      </if>
      <if test="anlysis != null">
        anlysis,
      </if>
      <if test="rightScore != null">
        right_score,
      </if>
      <if test="score != null">
        score,
      </if>
      <if test="sign != null">
        sign,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      <if test="id != null">
        #{id,jdbcType=BIGINT},
      </if>
      <if test="studentId != null">
        #{studentId,jdbcType=VARCHAR},
      </if>
      <if test="courseName != null">
        #{courseName,jdbcType=VARCHAR},
      </if>
      <if test="examinationName != null">
        #{examinationName,jdbcType=VARCHAR},
      </if>
      <if test="judgeTeacher != null">
        #{judgeTeacher,jdbcType=VARCHAR},
      </if>
      <if test="topicType != null">
        #{topicType,jdbcType=VARCHAR},
      </if>
      <if test="topicId != null">
        #{topicId,jdbcType=BIGINT},
      </if>
      <if test="rightError != null">
        #{rightError,jdbcType=TINYINT},
      </if>
      <if test="rightAnswer != null">
        #{rightAnswer,jdbcType=VARCHAR},
      </if>
      <if test="personalAnswer != null">
        #{personalAnswer,jdbcType=VARCHAR},
      </if>
      <if test="anlysis != null">
        #{anlysis,jdbcType=VARCHAR},
      </if>
      <if test="rightScore != null">
        #{rightScore,jdbcType=REAL},
      </if>
      <if test="score != null">
        #{score,jdbcType=REAL},
      </if>
      <if test="sign != null">
        #{sign,jdbcType=TINYINT},
      </if>
    </trim>
  </insert>
  <select id="countByExample" parameterType="cn.threeGroup.domain.ErrorTopicExample" resultType="java.lang.Long">
    select count(*) from error_topic
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </select>
  <update id="updateByExampleSelective" parameterType="map">
    update error_topic
    <set>
      <if test="record.id != null">
        id = #{record.id,jdbcType=BIGINT},
      </if>
      <if test="record.studentId != null">
        student_id = #{record.studentId,jdbcType=VARCHAR},
      </if>
      <if test="record.courseName != null">
        course_name = #{record.courseName,jdbcType=VARCHAR},
      </if>
      <if test="record.examinationName != null">
        examination_name = #{record.examinationName,jdbcType=VARCHAR},
      </if>
      <if test="record.judgeTeacher != null">
        judge_teacher = #{record.judgeTeacher,jdbcType=VARCHAR},
      </if>
      <if test="record.topicType != null">
        topic_type = #{record.topicType,jdbcType=VARCHAR},
      </if>
      <if test="record.topicId != null">
        topic_id = #{record.topicId,jdbcType=BIGINT},
      </if>
      <if test="record.rightError != null">
        right_error = #{record.rightError,jdbcType=TINYINT},
      </if>
      <if test="record.rightAnswer != null">
        right_answer = #{record.rightAnswer,jdbcType=VARCHAR},
      </if>
      <if test="record.personalAnswer != null">
        personal_answer = #{record.personalAnswer,jdbcType=VARCHAR},
      </if>
      <if test="record.anlysis != null">
        anlysis = #{record.anlysis,jdbcType=VARCHAR},
      </if>
      <if test="record.rightScore != null">
        right_score = #{record.rightScore,jdbcType=REAL},
      </if>
      <if test="record.score != null">
        score = #{record.score,jdbcType=REAL},
      </if>
      <if test="record.sign != null">
        sign = #{record.sign,jdbcType=TINYINT},
      </if>
    </set>
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExample" parameterType="map">
    update error_topic
    set id = #{record.id,jdbcType=BIGINT},
      student_id = #{record.studentId,jdbcType=VARCHAR},
      course_name = #{record.courseName,jdbcType=VARCHAR},
      examination_name = #{record.examinationName,jdbcType=VARCHAR},
      judge_teacher = #{record.judgeTeacher,jdbcType=VARCHAR},
      topic_type = #{record.topicType,jdbcType=VARCHAR},
      topic_id = #{record.topicId,jdbcType=BIGINT},
      right_error = #{record.rightError,jdbcType=TINYINT},
      right_answer = #{record.rightAnswer,jdbcType=VARCHAR},
      personal_answer = #{record.personalAnswer,jdbcType=VARCHAR},
      anlysis = #{record.anlysis,jdbcType=VARCHAR},
      right_score = #{record.rightScore,jdbcType=REAL},
      score = #{record.score,jdbcType=REAL},
      sign = #{record.sign,jdbcType=TINYINT}
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateScore1" parameterType="cn.threeGroup.domain.ErrorTopic">
    update error_topic
    <set>
      <if test="score!=null">
        score=#{score}
      </if>
    </set>
    <where>
      <if test="id!=null">
        id=#{id}
      </if>
    </where>
  </update>
  <select id="selectPeople" resultType="string">
    select student_id from error_topic
    <where>
      <if test="examination_name!=null and examination_name !=''">
        and examination_name=#{examination_name}
      </if>
      <if test="topic_id!=null and topic_id!=''">
        and topic_id=#{topic_id}
      </if>
      <if test="topic_type!=null and topic_type!=''">
        and topic_type=#{topic_type}
      </if>
      and right_score!=score
    </where>
  </select>
  <select id="errorStudentSearch" resultMap="BaseResultMap">
    select * from error_topic
    <where>
      <if test="examination_name!=null and examination_name !=''">
        and examination_name=#{examination_name}
      </if>
      <if test="topic_id !=null ">
        and topic_id = #{topic_id}
      </if>
      <if test="topic_type !=null and topic_type!=''">
        and topic_type = #{topic_type}
      </if>
      and right_score!=score
    </where>
  </select>
  <select id="doFlag" resultType="Integer">
    select COUNT(*) from error_topic
    <where>
      <if test="examination_name!=null and examination_name !=''">
        and examination_name=#{examination_name}
      </if>
      <if test="student_id !=null and student_id!='' ">
        and student_id = #{student_id}
      </if>
      and right_score=1
    </where>
  </select>
</mapper>