<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="cn.threeGroup.dao.ExamInfoMapper">
  <resultMap id="BaseResultMap" type="cn.threeGroup.domain.ExamInfo">
    <id column="id" jdbcType="BIGINT" property="id" />
    <result column="teacher_email" jdbcType="VARCHAR" property="teacherEmail" />
    <result column="exam_name" jdbcType="VARCHAR" property="examName" />
    <result column="start_time" jdbcType="TIMESTAMP" property="startTime" />
    <result column="exam_time" jdbcType="TIMESTAMP" property="examTime" />
    <result column="grade_name" jdbcType="VARCHAR" property="gradeName" />
    <result column="class_name" jdbcType="VARCHAR" property="className" />
  </resultMap>
  <sql id="Example_Where_Clause">
    <where>
      <foreach collection="oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Update_By_Example_Where_Clause">
    <where>
      <foreach collection="example.oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Base_Column_List">
    id, teacher_email, exam_name, start_time, exam_time, grade_name, class_name
  </sql>
  <select id="selectByExample" parameterType="cn.threeGroup.domain.ExamInfoExample" resultMap="BaseResultMap">
    select
    <if test="distinct">
      distinct
    </if>
    <include refid="Base_Column_List" />
    from exam_info
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null">
      order by ${orderByClause}
    </if>
  </select>
  <select id="selectByPrimaryKey" parameterType="java.lang.Long" resultMap="BaseResultMap">
    select 
    <include refid="Base_Column_List" />
    from exam_info
    where id = #{id,jdbcType=BIGINT}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Long">
    delete from exam_info
    where id = #{id,jdbcType=BIGINT}
  </delete>
  <delete id="deleteByExample" parameterType="cn.threeGroup.domain.ExamInfoExample">
    delete from exam_info
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </delete>
  <insert id="insert" parameterType="cn.threeGroup.domain.ExamInfo">
    insert into exam_info (id, teacher_email, exam_name, 
      start_time, exam_time, grade_name, 
      class_name)
    values (#{id,jdbcType=BIGINT}, #{teacherEmail,jdbcType=VARCHAR}, #{examName,jdbcType=VARCHAR}, 
      #{startTime,jdbcType=TIMESTAMP}, #{examTime,jdbcType=TIMESTAMP}, #{gradeName,jdbcType=VARCHAR}, 
      #{className,jdbcType=VARCHAR})
  </insert>
  <insert id="insertSelective" parameterType="cn.threeGroup.domain.ExamInfo">
    insert into exam_info
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="id != null">
        id,
      </if>
      <if test="teacherEmail != null">
        teacher_email,
      </if>
      <if test="examName != null">
        exam_name,
      </if>
      <if test="startTime != null">
        start_time,
      </if>
      <if test="examTime != null">
        exam_time,
      </if>
      <if test="gradeName != null">
        grade_name,
      </if>
      <if test="className != null">
        class_name,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      <if test="id != null">
        #{id,jdbcType=BIGINT},
      </if>
      <if test="teacherEmail != null">
        #{teacherEmail,jdbcType=VARCHAR},
      </if>
      <if test="examName != null">
        #{examName,jdbcType=VARCHAR},
      </if>
      <if test="startTime != null">
        #{startTime,jdbcType=TIMESTAMP},
      </if>
      <if test="examTime != null">
        #{examTime,jdbcType=TIMESTAMP},
      </if>
      <if test="gradeName != null">
        #{gradeName,jdbcType=VARCHAR},
      </if>
      <if test="className != null">
        #{className,jdbcType=VARCHAR},
      </if>
    </trim>
  </insert>
  <select id="countByExample" parameterType="cn.threeGroup.domain.ExamInfoExample" resultType="java.lang.Long">
    select count(*) from exam_info
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </select>
  <update id="updateByExampleSelective" parameterType="map">
    update exam_info
    <set>
      <if test="record.id != null">
        id = #{record.id,jdbcType=BIGINT},
      </if>
      <if test="record.teacherEmail != null">
        teacher_email = #{record.teacherEmail,jdbcType=VARCHAR},
      </if>
      <if test="record.examName != null">
        exam_name = #{record.examName,jdbcType=VARCHAR},
      </if>
      <if test="record.startTime != null">
        start_time = #{record.startTime,jdbcType=TIMESTAMP},
      </if>
      <if test="record.examTime != null">
        exam_time = #{record.examTime,jdbcType=TIMESTAMP},
      </if>
      <if test="record.gradeName != null">
        grade_name = #{record.gradeName,jdbcType=VARCHAR},
      </if>
      <if test="record.className != null">
        class_name = #{record.className,jdbcType=VARCHAR},
      </if>
    </set>
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExample" parameterType="map">
    update exam_info
    set id = #{record.id,jdbcType=BIGINT},
      teacher_email = #{record.teacherEmail,jdbcType=VARCHAR},
      exam_name = #{record.examName,jdbcType=VARCHAR},
      start_time = #{record.startTime,jdbcType=TIMESTAMP},
      exam_time = #{record.examTime,jdbcType=TIMESTAMP},
      grade_name = #{record.gradeName,jdbcType=VARCHAR},
      class_name = #{record.className,jdbcType=VARCHAR}
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByPrimaryKeySelective" parameterType="cn.threeGroup.domain.ExamInfo">
    update exam_info
    <set>
      <if test="teacherEmail != null">
        teacher_email = #{teacherEmail,jdbcType=VARCHAR},
      </if>
      <if test="examName != null">
        exam_name = #{examName,jdbcType=VARCHAR},
      </if>
      <if test="startTime != null">
        start_time = #{startTime,jdbcType=TIMESTAMP},
      </if>
      <if test="examTime != null">
        exam_time = #{examTime,jdbcType=TIMESTAMP},
      </if>
      <if test="gradeName != null">
        grade_name = #{gradeName,jdbcType=VARCHAR},
      </if>
      <if test="className != null">
        class_name = #{className,jdbcType=VARCHAR},
      </if>
    </set>
    where id = #{id,jdbcType=BIGINT}
  </update>
  <update id="updateByPrimaryKey" parameterType="cn.threeGroup.domain.ExamInfo">
    update exam_info
    set teacher_email = #{teacherEmail,jdbcType=VARCHAR},
      exam_name = #{examName,jdbcType=VARCHAR},
      start_time = #{startTime,jdbcType=TIMESTAMP},
      exam_time = #{examTime,jdbcType=TIMESTAMP},
      grade_name = #{gradeName,jdbcType=VARCHAR},
      class_name = #{className,jdbcType=VARCHAR}
    where id = #{id,jdbcType=BIGINT}
  </update>
</mapper>